name: Java CI with Maven, SonarQube, and Docker

on:
  push:
    branches: [ "main" , "develop" ]
  pull_request:
    branches: [ "main" , "develop" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      #      - name: Run SonarQube
      #        run: mvn clean verify sonar:sonar -Dsonar.projectKey=${{secrets.SONAR_KEY}} -Dsonar.projectName=${{secrets.SONAR_NAME}} -Dsonar.host.url=${{secrets.SONAR_HOST}} -Dsonar.token=${{secrets.SONAR_TOKEN}}

      - name: Delete file in server
        run: sudo rm -rf /home/nhnacademy/bookstore

      - name: Copy files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_IP }}
          username: ${{ secrets.SSH_ID }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "."
          target: "/home/nhnacademy/bookstore"

      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_IP }}
          username: ${{ secrets.SSH_ID }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd /home/nhnacademy/bookstore
            
            
            sudo docker build -t bookstore-image1 .
            sudo docker build -t bookstore-image2 .
            
            
            if sudo docker service ls | grep -q 'bookstore1'; then
              sudo docker service rm bookstore1
            fi
            sudo docker service create --name bookstore1 --publish 8081:8081 --network back_network_swarm bookstore-image1

            sleep 90
            
            if sudo docker service ls | grep -q 'bookstore2'; then
              sudo docker service rm bookstore2
            fi
            sudo docker service create --name bookstore2 --publish 8082:8082 --network back_network_swarm bookstore-image2

